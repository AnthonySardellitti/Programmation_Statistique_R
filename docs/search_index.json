[
["entrainement.html", "Chapitre 11 S’entrainer 11.1 TP1 11.2 TP2", " Chapitre 11 S’entrainer 11.1 TP1 Ce TP reprend les notions évoquées dans les chapitres 2 et 3. On utilise le dataset mtcars qui décrit les statistiques de voitures. Le dataset est présent dans le package datasets automatiquement installé sur R. Voici une description des données : mpg : Miles/(US) gallon cyl : Number of cylinders disp : Displacement (cu.in.) hp : Gross horsepower drat : Rear axle ratio wt : Weight (1000 lbs) qsec : 1/4 mile time vs : Engine (0 = V-shaped, 1 = straight) am : Transmission (0 = automatic, 1 = manual) gear : Number of forward gears carb : Number of carburetors mpg cyl disp hp drat wt qsec vs am gear carb Mazda RX4 21.0 6 160.0 110 3.90 2.620 16.46 0 1 4 4 Mazda RX4 Wag 21.0 6 160.0 110 3.90 2.875 17.02 0 1 4 4 Datsun 710 22.8 4 108.0 93 3.85 2.320 18.61 1 1 4 1 Hornet 4 Drive 21.4 6 258.0 110 3.08 3.215 19.44 1 0 3 1 Hornet Sportabout 18.7 8 360.0 175 3.15 3.440 17.02 0 0 3 2 Valiant 18.1 6 225.0 105 2.76 3.460 20.22 1 0 3 1 Duster 360 14.3 8 360.0 245 3.21 3.570 15.84 0 0 3 4 Merc 240D 24.4 4 146.7 62 3.69 3.190 20.00 1 0 4 2 Merc 230 22.8 4 140.8 95 3.92 3.150 22.90 1 0 4 2 Merc 280 19.2 6 167.6 123 3.92 3.440 18.30 1 0 4 4 Exercice 1 : Préparer son environnement de travail Dupliquer le dataset dans un nouvel objet appelé df. Combien de lignes, colonnes sont présentes dans ce dataset (utilisez les fonctions adaptées) ? Affichez le nom des colonnes Affichez le type des colonnes avec la fonction adaptée. On souhaite analyser les variables cyl, vs, am, gear et carb en tant que variables qualitatives. Modifier le type de ces variables pour les transformer en type factor. Combien de niveaux (levels) sont présents dans ces variables ? Affichez un résumé des données avec la fonction adaptée. Exercice 2 : Statistiques descriptives Déterminer la moyenne de la variable mpg Déterminer le maximum la variable wt. Déterminer la médiane de la variable hp. Déterminer les quartiles de la variable qsec. Déterminer les déciles de la variable qsec. Déterminer la variance et l’écart-type de la variable qsec. Déterminer un tri à plat pour compter les effectifs des modalités de chaque variables factor. Exercice 3 : Quelques graphiques Contruire un histogramme de la distribution de la variable qsec. Constuire une boîte à moustache de la distribution de la variable qsec. Construire un diagramme en barre de répartition de la variable carb. Construire un diagramme circulaire de la répartition de la variable vs. Exercice 4 : Création de nouvelles colonnes La colonne mpg correspond au nombre de miles parcouru en 1 gallon (US). Cette mesure correspond en quelques sortes à la mesure de consommation de litres aux 100 km utilisée en France. Créer une colonne supplémentaire appelée litres_au_100km qui correspond à la conversion de la variable mpg(Miles/(US) gallon) en nombre de litres aux 100 kilomètres. Aidez-vous du guide des conversion disponible sur ce lien. Construire une nouvelle colonne appelée qsec_cut qui est un découpage de la variable qsec en 3 groupes (pas de restriction sur le nombre de classe). Construire une nouvelle colonne appelée litres100km_group pour distinguer deux groupes de voiture : celles qui consomment plus que la moyenne et celles qui consomment moins que la moyenne. 11.2 TP2 Ce TP reprend les notions évoquées dans les chapitres 2 à 5. On utilise le fichier pokemon.xlsx qui décrit les statistiques des pokemon des deux premières générations. Le fichier est issu du site Kaggle. Il a été adapté pour ce TP. Voici une description des données : pokedex_number : numéro du pokemon nom : nom du pokemon generation : le numéro de génération dont est issu le pokemon is_legendary : Oui / Non si le pokemon est légendaire type : le type du pokemon weight_kg : le poids du pokemon en kg height_m : la taille du pokemon en mètre attack : la puissance d’attaque du pokemon defense : la puissance de défense du pokemon speed : la vitesse du pokemon pokedex_number nom generation is_legendary type weight_kg height_m attack defense speed 1 Bulbizarre 1 Non grass 6.9 0.7 49 49 45 2 Herbizarre 1 Non grass 13.0 1.0 62 63 60 3 Florizarre 1 Non grass 100.0 2.0 100 123 80 4 Salameche 1 Non fire 8.5 0.6 52 43 65 5 Reptincel 1 Non fire 19.0 1.1 64 58 80 6 Dracaufeu 1 Non fire 90.5 1.7 104 78 100 7 Carapuce 1 Non water 9.0 0.5 48 65 43 8 Carabaffe 1 Non water 22.5 1.0 63 80 58 9 Tortank 1 Non water 85.5 1.6 103 120 78 10 Chenipan 1 Non bug 2.9 0.3 30 35 45 11 Chrysacier 1 Non bug 9.9 0.7 20 55 30 12 Papilusion 1 Non bug 32.0 1.1 45 50 70 13 Aspicot 1 Non bug 3.2 0.3 35 30 50 14 Coconfort 1 Non bug 10.0 0.6 25 50 35 15 Dardargnan 1 Non bug 29.5 1.0 150 40 145 16 Roucool 1 Non normal 1.8 0.3 45 40 56 17 Roucoups 1 Non normal 30.0 1.1 60 55 71 18 Roucarnage 1 Non normal 39.5 1.5 80 80 121 19 Rattata 1 Non normal NA NA 56 35 72 20 Rattatac 1 Non normal NA NA 71 70 77 Exercice 1 : Importer les données Importez le jeu de données pokemon.xlsx à l’aide du package readxl. Combien de lignes, colonnes sont présentes dans ce dataset (utilisez les fonctions adaptées) ? Affichez le nom des colonnes. Affichez le type des colonnes avec la fonction adaptée. On souhaite analyser les variables generation, is_legendary, et type en tant que variables qualitatives. Modifier le type de ces variables pour les transformer en type factor. Combien de niveaux (levels) sont présents dans ces variables ? Affichez un résumé des données avec la fonction adaptée. Exercice 2 : Statistiques descriptives Déterminer la moyenne de la variable weight_kg. Déterminer la médiane de la variable weight_kg. Déterminer les quartiles de la variable height_m. Déterminer les déciles de la variable height_m. Déterminer la variance et l’écart-type de la variable weight_kg. Déterminer un tri à plat pour compter les effectifs des modalités de chaque variable factor en triant chaque sortie par ordre décroissant. Exercice 3 : Tris et Selections Pour chaque question suivante, affectez le résultat de la requête dans un objet puis calculez sa dimension. Exemple : #Selectionnez les deux premières colonnes du data frame requete_0 &lt;- pokemon[,1:2] dim(requete_0) ## [1] 251 2 Sélectionnez la colonne nom et is_legendary. Sélectionnez les 50 premières lignes et les deux premières colonnes. Sélectionnez les 10 premières lignes et toutes les colonnes. Sélectionnez toutes les colonnes sauf la dernière. Sélectionnez les colonnes 2,8,9 et 10. Sélectionnez les lignes 20 à 30 et 80 à 100. Triez le dataset par ordre alphabétique et afficher le nom du pokemon dela première ligne. Triez le dataset par weight_kg en ordre décroissant, et afficher le nomdu pokemon de la première ligne Triez le dataset par attack en ordre décroissant puis par speed en ordre croissant, et afficher le nom des pokemons des 10 premières lignes. Exercice 4 : Tris et Filtres Pour chaque question suivante, affectez le résultat de la requête dans un objet puis calculez sa dimension. Pour faciliter la lecture, sélectionnez la colonne nomet les colonnes concernées par le filtre. Exemple : #Selectionnez les pokemons de type feu requete_0 &lt;- pokemon[ pokemon$type == &quot;fire&quot;, c(&quot;nom&quot;,&quot;type&quot;)] dim(requete_0) ## [1] 20 2 Filtrez sur les pokemons qui ont 150 ou plus d’attack puis trier le résultat par ordre décroissant d’attack. Filtrez sur les pokemons de type dragon,ghost,psychic et dark Filtrez sur les pokemons de type fire avec plus de 100 d’attack, puis trier le résultat par ordre décroissant d’attack. Filtrez sur les pokemons qui ont entre 100 et 150 de speed. Les trier par speeddécroissant. Filtrez sur les pokemons pesant plus de 250 kg et affichez le résultat pour vérifier. Filtrez sur les pokémons qui ont des valeurs manquantes sur la variable height_m. Filtrez sur les pokemons qui ont des valeurs renseignées à la fois pour la variable weight_kg et la variable height. Exercice 5 : Agregations Pour chaque question suivante, affectez le résultat de la requête dans un objet puis calculez sa dimension. Exemple : #Calculez la vitesse moyenne par generation requete_0 &lt;- aggregate(formula = speed ~ generation, data = pokemon , FUN = mean) dim(requete_0) ## [1] 2 2 generation speed 1 70.15232 2 61.61000 Calculez l’attack moyenne en fonction de la variable type, puis filtrez sur les 3 types avec les moyennes les plus élevées. Calculez le nombre de pokemon par type , puis triez par ordre décroissant ces effectifs. Calculez la médiane de weight_kg par type. Calculez le nombre de pokemon par type et generation Calculez la moyenne de chaque critère (weight_kg, height_m, attack, defense et speed) en fonction de chaque type. "]
]
